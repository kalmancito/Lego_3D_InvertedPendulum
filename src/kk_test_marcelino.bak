
#define DEC_OFFSET 5e-5
#define GYRO   IN_1
#define ACC   IN_4
#define SAMPLESIZE 500
float gOffset;
float gyroSpeed;

void calibracion();
task leergyro();

void calibracion(){
  

  int i, g;
  float gMin=0, gMax=0;


  TextOut(0,LCD_LINE1,"CALIBRACION");




        gOffset = 0.0;
        for (i=0; i<SAMPLESIZE; i++) {
           g = SensorHTGyro(GYRO);

           if (g>gMax){
              gMax = g;
              }
           else if (g<gMin){

              gMin = g;
              }

           gOffset += g;
           Wait(5);
        }



     gOffset = gOffset/SAMPLESIZE -1;

    TextOut(0, LCD_LINE4, "Avg:     ");
    NumOut(6*4, LCD_LINE4, gOffset);
    TextOut(0,LCD_LINE5,"Max:     ");
    NumOut(6*4, LCD_LINE5, gMax);
    TextOut(0,LCD_LINE6,"Min:     ");
    NumOut(6*4, LCD_LINE6, gMin);

  Wait(5000);

  }




task leerGyro(){

 float gyroRaw;

   while(true){
  
      gyroRaw = SensorHTGyro(GYRO);
      gOffset = DEC_OFFSET * gyroRaw + (1-DEC_OFFSET) * gOffset;
      gyroSpeed = gyroRaw - floor(gOffset);
      Wait(5);

   }
}



task main()
{

  int ax,ay,az;
  int v=0;
  int an;
  float angle,psi;
  int vv, offset;
  float gyroAvg, gyroSum = 0;
  float factor=360/10400*45/8;
  int data[SAMPLESIZE];
  int cSet[7];
 
  SetSensorHTGyro(GYRO);
  Wait(1000);
   ClearScreen();
   calibracion();
    TextOut(0, LCD_LINE7, "Avg:     ");
    NumOut(6*4, LCD_LINE7, gOffset);
}
