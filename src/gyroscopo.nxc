
#define DEC_OFFSET 5e-5
#define GYRO   IN_1
#define ACC   IN_4
#define SAMPLESIZE 500
float gOffset;
float gyroSpeed=0;
float angulo_g,angulo_a, angulo_ant=0;
unsigned int x1, x2, deltat;

void calibracion();
void leergyro();
void leerACC();

void calibracion(){
  
  int i, g;
  float gMin, gMax;
  TextOut(0,LCD_LINE1,"CALIBRACION");
          g = SensorHTGyro(GYRO);
          gMax = g;
          gMin = g;
          gOffset = 0.0;
        for (i=0; i<SAMPLESIZE; i++) {
           g = SensorHTGyro(GYRO);

           if (g>gMax){
              gMax = g;
              }
           else if (g<gMin){

              gMin = g;
              }

           gOffset += g;
           Wait(5);
        }
     gOffset = gOffset/SAMPLESIZE -1;

    TextOut(0, LCD_LINE4, "Avg:     ");
    NumOut(6*4, LCD_LINE4, gOffset);
    TextOut(0,LCD_LINE5,"Max:     ");
    NumOut(6*4, LCD_LINE5, gMax);
    TextOut(0,LCD_LINE6,"Min:     ");
    NumOut(6*4, LCD_LINE6, gMin);
  }




void leergyro(){

 float gyroRaw;

      gyroRaw = SensorHTGyro(GYRO);
      gOffset = DEC_OFFSET * gyroRaw + (1-DEC_OFFSET) * gOffset;
      gyroSpeed = gyroRaw - floor(gOffset);
}

// Funcion para leer acelerometro
void leerACC(){
  int ax,ay,az;
  string sAngulo;

  ReadSensorHTAccel(ACC, ax, ay, az); // Leer ACC
  angulo = atan2(ay,ax)*180/3.141592;

  sAngulo = NumToStr(angulo);
  sAngulo = StrCat("Angulo: ", sAngulo);
  TextOut(0, LCD_LINE3, sAngulo); // Mostrar angulo
  Wait(50);
}


task main()
{
 ClearScreen();
  int ax,ay,az;
  int v=0;
  int an;
  float angle,psi;
  int vv, offset;
  float gyroAvg, gyroSum = 0;
  float factor=360/10400*45/8;
  int data[SAMPLESIZE];
  int cSet[7];
 
  SetSensorHTGyro(GYRO);
  Wait(1000);

  //---------- CALIBRACION ---------------

  calibracion();
  Wait(1000);
  
  ClearScreen();
  //----- LEER GYRO EN BUCLE INFINITO-----

  int cont=0;
  
  while(true){

  //ClearScreen();
  x2 = CurrentTick();
  if (cont>0){
     deltat=x2-x1;
     }
  else{
  cont++;
  }
  x1 = CurrentTick();
  leergyro();
  
  angulo=angulo_ant+gyroSpeed*deltat*0.001;
  angulo_ant=angulo;

  
  //TextOut(0, LCD_LINE4, "tiempo:     ");
  NumOut(0*4, LCD_LINE4, angulo);
  NumOut(0*4, LCD_LINE5, gyroSpeed);
  
  }
}
